'name': 'Rampcode'
'scopeName': 'source.rampcode'
'fileTypes': [
  'ramp'
]
'patterns': [
  {
    'match': '(\\$v1)\\b'
    'name': 'entity.name.function.rampcode'
  }
  {
    'match': '\\b([0-9]+\\.[0-9]+)|([0-9]+\\.)|(\\.[0-9])|\\b([0-9]+)\\b'
    'name': 'constant.numeric.rampcode'
  }
  {
    'match': '\\b(set|rec)\\b'
    'name': 'keyword.control.rampcode'
  }
  {
    'include': '#comments'
  }
  {
    'include': '#operators'
  }
  {
    'include': '#functions'
  }
  {
    'include': '#punctuation'
  }
]
'repository':
  'comments':
    'patterns': [
      {
        'begin': '/\\*'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.begin.rampcode'
        'end': '\\*/'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.comment.end.rampcode'
        'name': 'comment.block.rampcode'
      }
      {
        'begin': '--'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.begin.rampcode'
        'end': '$'
        'name': 'comment.line.double-dash.rampcode'
      }
    ]
  'operators':
    'patterns': [
      {
        'match': '(&&|\\|\\|)'
        'name': 'keyword.operator.logical.rampcode'
      }
      {
        'match': '(&|\\||\\^|~|>>|<<)'
        'name': 'keyword.operator.bitwise.rampcode'
      }
      {
        'match': '(==|!=|<=|>=|<|>)'
        'name': 'keyword.operator.comparison.rampcode'
      }
      {
        'match': '(%|\\*|/|-|\\+)'
        'name': 'keyword.operator.math.rampcode'
      }
    ]
  'functions':
    'patterns': [
      {
        'match': '\\b(if|int|rint|float|min|max|abs|floor|ceil|fmod|pow|sqrt|cbrt|exp|expm1|log|log1p|log10|fact|sin|cos|tan|asin|acos|atan|atan2|sinh|cosh|tanh|asinh|acosh|atanh)\\b'
        'name': 'support.function.rampcode'
      }
    ]
  'punctuation':
    'patterns': [
      {
        'begin': '\\('
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.section.bracket.round.begin.rampcode'
        'end': '\\)'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.section.bracket.round.end.rampcode'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
      {
        'match': '\\)'
        'name': 'punctuation.unmatched.bracket.round.end.rampcode'
      }
      {
        'match': ';'
        'name': 'punctuation.terminator.statement.semicolon.rampcode'
      }
    ]